name: Deploy Mosla Pioneers App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: adhamelgohary02/mosla-pioneers:${{ github.sha }} # Hardcoded your username for safety

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Set up secrets on the server (this is safe to run every time)
            echo "${{ secrets.DB_PASSWORD }}" | docker secret create db_password - || true
            echo "${{ secrets.DB_ROOT_PASSWORD }}" | docker secret create db_root_password - || true
            echo "${{ secrets.FLASK_SECRET_KEY }}" | docker secret create flask_secret_key - || true
            # Note: mail_password secret is created but may not be used if you removed mail from app.py
            echo "${{ secrets.MAIL_PASSWORD }}" | docker secret create mail_password - || true

            # --- DEPLOYMENT SCRIPT ---
            APP_DIR=~/mosla-pioneers-app
            GIT_REPO_URL="https://AdhamElgohary:${{ secrets.GH_PAT }}@github.com/AdhamElgohary/Mosla-Pionners.git"

            if [ ! -d "$APP_DIR" ]; then
              echo "Cloning repository..."
              git clone "$GIT_REPO_URL" "$APP_DIR"
            else
              echo "Repository exists. Pulling latest changes..."
              cd "$APP_DIR"
              # git config --unset-all http.extraheader # Clean previous config
              # git config http.extraheader "AUTHORIZATION: basic $(echo -n x-access-token:${{ secrets.GH_PAT }} | base64)"
              git pull origin main
            fi

            # Navigate into the app directory
            cd "$APP_DIR"

            # --- THE CRITICAL FIX IS HERE ---
            # Set the TAG for the image
            export TAG=${{ github.sha }}
            # Export the root password as an environment variable for docker-compose to use
            export MYSQL_ROOT_PASSWORD_SECRET="${{ secrets.DB_ROOT_PASSWORD }}"

            # Deploy the stack
            echo "Deploying stack with image tag: $TAG"
            docker stack deploy --compose-file docker-compose.yml --with-registry-auth mosla-stack